<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.DormStudentMapper">
    
    <resultMap type="DormStudent" id="DormStudentResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="age"    column="age"    />
        <result property="sex"    column="sex"    />
        <result property="profession"    column="profession"    />
        <result property="classes"    column="classes"    />
        <result property="status"    column="status"    />
        <association property="houseId"    javaType="DormHouse" >
            <result column="house_id" property="id"/>
            <result column="code" property="code"/>
        </association>
    </resultMap>

    <sql id="selectDormStudentVo">
        select a.id, a.name, a.age, a.sex, a.profession, a.classes, a.house_id, a.status, b.code from dorm_student a
        left join dorm_house b on a.house_id = b.id
    </sql>

    <select id="selectDormStudentList" parameterType="DormStudent" resultMap="DormStudentResult">
        <include refid="selectDormStudentVo"/>
        <where>  
            <if test="name != null  and name != ''"> and a.name like concat('%', #{name}, '%')</if>
            <if test="age != null "> and a.age = #{age}</if>
            <if test="sex != null  and sex != ''"> and a.sex = #{sex}</if>
            <if test="profession != null  and profession != ''"> and a.profession = #{profession}</if>
            <if test="classes != null  and classes != ''"> and a.classes = #{classes}</if>
            <if test="houseId.id != null "> and a.house_id = #{houseId.id}</if>
            <if test="status != null  and status != ''"> and a.status = #{status}</if>
        </where>
    </select>
    
    <select id="selectDormStudentById" parameterType="Long" resultMap="DormStudentResult">
        <include refid="selectDormStudentVo"/>
        where a.id = #{id}
    </select>
        
    <insert id="insertDormStudent" parameterType="DormStudent">
        insert into dorm_student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="name != null">name,</if>
            <if test="age != null">age,</if>
            <if test="sex != null">sex,</if>
            <if test="profession != null">profession,</if>
            <if test="classes != null">classes,</if>
            <if test="houseId.id != null">house_id,</if>
            <if test="status != null">status,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="name != null">#{name},</if>
            <if test="age != null">#{age},</if>
            <if test="sex != null">#{sex},</if>
            <if test="profession != null">#{profession},</if>
            <if test="classes != null">#{classes},</if>
            <if test="houseId.id != null">#{houseId.id},</if>
            <if test="status != null">#{status},</if>
         </trim>
    </insert>

    <update id="updateDormStudent" parameterType="DormStudent">
        update dorm_student
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="age != null">age = #{age},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="profession != null">profession = #{profession},</if>
            <if test="classes != null">classes = #{classes},</if>
            <if test="houseId.id != null">house_id = #{houseId.id},</if>
            <if test="status != null">status = #{status},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteDormStudentById" parameterType="Long">
        delete from dorm_student where id = #{id}
    </delete>

    <delete id="deleteDormStudentByIds" parameterType="String">
        delete from dorm_student where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>